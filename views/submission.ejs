<!DOCTYPE html>
<html>
<head>
    <title><%= submission.id %></title>
    <%- include('head.ejs') %>
</head>
<body>
    <div class="container">
        <h1>Submission #<%= submission.cnt %></h1>
        <code id="stderr" style="color: red; width: calc(100% - 22px);"><%= log %></code><br>
    <% for (idx in code) { %>
        <span class="fileLabel"><%= idx %></span>
        <code><%= code[idx] %></code><br>
    <% } %>
        <span class="fileLabel">Submitted on <%= submission.submitDate %> by <%= submission.user %></span>
        <table id="table">
            <tr>
                <th>Subtask</th>
                <th>Time</th>
                <th>Memory</th>
                <th>Result</th>
                <th>Marks</th>
            </tr>
            <tr>
                <td>Total</td>
                <td style="background-color: black; color: white;"><span class="onProgressBar"><div class="time" style="display: inline-block;"><%= submission.time %></div> ms</span><div id="timeBar" class="progressBar <%= (submission.time > subTl[0] ? 'progressRed' : 'progressGreen') %>" style="width: <%= Math.min(submission.time / subTl[0] * 100, 100) %>%;"><span class="inProgressBar"><div class="time" style="display: inline-block;"><%= submission.time %></div> ms</span></div></td>
                <td style="background-color: black; color: white;"><span class="onProgressBar"><div class="mem" style="display: inline-block;"><%= submission.memory %></div> bytes</span><div id="memBar" class="progressBar <%= (submission.mem > subMl[0] ? 'progressRed' : 'progressGreen') %>" style="width: <%= Math.min(submission.memory / subMl[0] * 100, 100) %>%;"><span class="inProgressBar"><div class="mem" style="display: inline-block;"><%= submission.memory %></div> bytes</span></div></td>
                <td style="background-color: black;"><span class="result onProgressBar"><%= getResult(submission.result) %></span><div id="prog" class="progressBar <%= (submission.result !== 'AC' && submission.result !== 'GD' ? submission.result === 'PC' ? 'progressYellow' : 'progressRed' : submission.marks >= max ? 'progressDone' : 'progressYellow') %>" style="width: 100%;"><span class="result inProgressBar"><%= getResult(submission.result) %></span></div></td>
                <td style="background-color: black;"><span class="marks onProgressBar"><%= submission.marks %></span><div id="marksBar" class="progressBar progressGreen" style="width: <%= submission.marks / max * 100 %>%;"><span class="marks inProgressBar"><%= submission.marks %></span></div></td>
            </tr>
<% subtasks.forEach(function (item) { %>
            <tr id="<%= item.subtask %>">
                <td><%= item.subtask %></td>
                <td style="background-color: black; color: white;"><span class="onProgressBar"><div class="<%= item.subtask %>time" style="display: inline-block;"><%= item.time %></div> ms</span><div id="<%= item.subtask %>timeBar" class="progressBar <%= (item.time > subTl[item.subtask] ? 'progressRed' : 'progressGreen') %>" style="width: <%= Math.min(item.time / subTl[item.subtask] * 100, 100) %>%;"><span class="inProgressBar"><div class="<%= item.subtask %>time" style="display: inline-block;"><%= item.time %></div> ms</span></div></td>
                <td style="background-color: black; color: white;"><span class="onProgressBar"><div class="<%= item.subtask %>mem" style="display: inline-block;"><%= item.mem %></div> bytes</span><div id="<%= item.subtask %>memBar" class="progressBar <%= (item.mem > subMl[item.subTask] ? 'progressRed' : 'progressGreen') %>" style="width: <%= Math.min(item.mem / subMl[item.subtask] * 100, 100) %>%;"><span class="inProgressBar"><div class="<%= item.subtask %>mem" style="display: inline-block;"><%= item.mem %></div> bytes</span></div></td>
                <td style="background-color: black;"><span class="<%= item.subtask %>result onProgressBar"><%= getResult(item.result) %></span><div id="<%= item.subtask %>prog" class="progressBar <%= (item.result !== 'AC' && item.result !== 'PC' ? 'progressRed' : item.marks >= item.max ? 'progressDone' : 'progressYellow') %>" style="width: 100%;"><span class="<%= item.subtask %>result inProgressBar"><%= getResult(item.result) %></span></div></td>
                <td><span class="<%= item.subtask %>marks"><%= item.marks %></span></td>
            </tr>
<% }); %>
        </table>
    <% if (user && (user.user === submission.user || user.admin)) { %>
        <form method="POST" action="/detail/<%= submission.id %>/delete" accept-charset="utf-8">
            <button type="submit">Remove</button> <% if (user.admin && user.user !== submission.user) { %> (as admin) <% } %>
        </form>
    <% } %>
        <a href="/view/<%= submission.problem %>"><button type="button" class="ok">Problem</button></a>
        <a href="/submissions/<%= submission.problem %>"><button type="button">List</button></a>
    </div>

    <script>
        var socket = io();
        socket.on('hello', function (data) {
            socket.emit('id', {
                id: '<%= submission.id %>',
                type: 'execute'
            });
        });
        socket.on('updt', function (data) {
            console.log(data);
            if (data.result === 'Marking' && ($('.result').html() !== 'Marking' && $('.result').html() !== 'Downloading Data' && $('.result').html() !== 'Compiling' && $('.result').html() !== 'Preparing Data')) return;
            if (data.progress !== undefined) {
                if (data.result !== 'Accepted' && data.result !== 'Marking') {
                    if (data.result === 'Partially Correct') {
                        $('#prog').removeClass('progressRed');
                        $('#prog').removeClass('progressGreen');
                        $('#prog').addClass('progressYellow');
                        $(`#prog`).removeClass('progressDone');
                    } else {
                        $('#prog').removeClass('progressYellow');
                        $('#prog').removeClass('progressGreen');
                        $('#prog').addClass('progressRed');
                        $(`#prog`).removeClass('progressDone');
                    }
                    $(`#prog`).width('100%');
                } else {
                    $('#prog').removeClass('progressRed');
                    $('#prog').width((data.progress * 100) + '%');
                    if (data.progress >= 1) {
                        $('#prog').removeClass('progressYellow');
                        $('#prog').removeClass('progressGreen');
                        $(`#prog`).addClass('progressDone');
                    } else {
                        $('#prog').addClass('progressYellow');
                        $(`#prog`).removeClass('progressGreen');
                        $(`#prog`).removeClass('progressDone');
                    }
                }
            }
            if (data.time !== undefined) {
                $('.time').html(data.time);
                if (data.time > <%= subTl[0] %>) {
                    $('#timeBar').addClass('progressRed');
                    $('#timeBar').removeClass('progressGreen');
                } else {
                    $('#timeBar').removeClass('progressRed');
                    $('#timeBar').addClass('progressGreen');
                }
                $('#timeBar').width(Math.min(data.time / <%= subTl[0] %>, 1) * 100 + '%');
            }
            if (data.mem !== undefined) {
                $('.mem').html(data.mem);
                if (data.mem > <%= subMl[0] %>) {
                    $('#memBar').addClass('progressRed');
                    $('#memBar').removeClass('progressGreen');
                } else {
                    $('#memBar').removeClass('progressRed');
                    $('#memBar').addClass('progressGreen');
                }
                $('#memBar').width(Math.min(data.mem / <%= subMl[0] %>, 1) * 100 + '%');
            }
            if (data.result !== undefined) $('.result').html(data.result);
            if (data.score !== undefined) {
                $('.marks').html(data.score);
                $('#marksBar').width((data.score / <%= max %> * 100) + '%');
            }
            if (data.subProgress !== undefined) {
                var tl = [ <% subTl.forEach(function (item) { %><%= item + ', ' %><% }); %>];
                var ml = [ <% subMl.forEach(function (item) { %><%= item + ', ' %><% }); %>];
                for (var i = 0; i < data.subProgress.length; i++) {
                    if ($(`#${i + 1}`).length <= 0) $('#table').append(`<tr id="${i + 1}">
                <td>${i + 1}</td>
                <td style="background-color: black; color: white;"><span class="onProgressBar"><div class="${i + 1}time" style="display: inline-block;"></div> ms</span><div id="${i + 1}timeBar" class="progressBar progressGreen" style="width: 0%;"><span class="inProgressBar"><div class="${i + 1}time" style="display: inline-block;"></div> ms</span></div></td>
                <td style="background-color: black; color: white;"><span class="onProgressBar"><div class="${i + 1}mem" style="display: inline-block;"></div> bytes</span><div id="${i + 1}memBar" class="progressBar progressGreen" style="width: 0%;"><span class="inProgressBar"><div class="${i + 1}mem" style="display: inline-block;"></div> bytes</span></div></td>
                <td style="background-color: black;"><span class="${i + 1}result onProgressBar"></span><div id="${i + 1}prog" class="progressBar progressYellow" style="width: 0%;"><span class="${i + 1}result inProgressBar"></span></div></td>
                <td><span class="${i + 1}marks"></span></td>
            </tr>`);
                    if (data.subResult[i] !== 'Accepted' && data.subResult[i] !== 'Marking') {
                        if (data.subResult[i] === 'Partially Correct') {
                            $(`#${i + 1}prog`).removeClass('progressGreen');
                            $(`#${i + 1}prog`).removeClass('progressRed');
                            $(`#${i + 1}prog`).addClass('progressYellow');
                            $(`#${i + 1}prog`).removeClass('progressDone');
                        } else {
                            $(`#${i + 1}prog`).removeClass('progressYellow');
                            $(`#${i + 1}prog`).removeClass('progressGreen');
                            $(`#${i + 1}prog`).addClass('progressRed');
                            $(`#${i + 1}prog`).removeClass('progressDone');
                        }
                        $(`#${i + 1}prog`).width('100%');
                    } else {
                        $(`#${i + 1}prog`).width((data.subProgress[i] * 100) + '%');
                        if (data.subProgress[i] >= 1) {
                            $(`#${i + 1}prog`).removeClass('progressYellow');
                            $(`#${i + 1}prog`).removeClass('progressGreen');
                            $(`#${i + 1}prog`).addClass('progressDone');
                        } else {
                            $(`#${i + 1}prog`).addClass('progressYellow');
                            $(`#${i + 1}prog`).removeClass('progressGreen');
                            $(`#${i + 1}prog`).removeClass('progressDone');
                        }
                    }
                    $(`.${i + 1}time`).html(data.subTime[i]);
                    if (data.subTime[i] > tl[i + 1]) {
                        $(`#${i + 1}timeBar`).addClass('progressRed');
                        $(`#${i + 1}timeBar`).removeClass('progressGreen');
                    } else {
                        $(`#${i + 1}timeBar`).removeClass('progressRed');
                        $(`#${i + 1}timeBar`).addClass('progressGreen');
                    }
                    $(`#${i + 1}timeBar`).width(Math.min(data.subTime[i] / tl[i + 1], 1) * 100 + '%');
                    $(`.${i + 1}mem`).html(data.subMem[i]);
                    if (data.subMem[i] > ml[i + 1]) {
                        $(`#${i + 1}memBar`).addClass('progressRed');
                        $(`#${i + 1}memBar`).removeClass('progressGreen');
                    } else {
                        $(`#${i + 1}memBar`).removeClass('progressRed');
                        $(`#${i + 1}memBar`).addClass('progressGreen');
                    }
                    $(`#${i + 1}memBar`).width(Math.min(data.subMem[i] / ml[i + 1], 1) * 100 + '%');
                    $(`.${i + 1}result`).html(data.subResult[i]);
                    $(`.${i + 1}marks`).html(data.subPoints[i]);
                }
            }
            $('#stderr').html(data.log);
        });
    </script>
</body>
</html>