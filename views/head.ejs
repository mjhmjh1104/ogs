<meta charset="utf-8">
<meta name="viewport" content="width=device-width, initial-scale=1">
<link rel="preconnect" href="https://fonts.googleapis.com">
<link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
<link href="https://fonts.googleapis.com/css2?family=Roboto&display=swap" rel="stylesheet">
<script src="//code.jquery.com/jquery-1.12.4.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
<script src="https://polyfill.io/v3/polyfill.min.js?features=es6"></script>
<script>
    MathJax = {
        tex: { inlineMath: [ [ '$', '$' ], [ '\\(', '\\)' ] ] }
    };
</script>
<script id="MathJax-script" async src="https://cdn.jsdelivr.net/npm/mathjax@3/es5/tex-mml-chtml.js"></script>
<script src="/socket.io/socket.io.js"></script>
<style>
    .condition {
        display: none;
    }
    body {
        height: 100%;
    }
    #preview {
        right: 0;
        top: 0;
        position: absolute;
        width: 50%;
        height: 100%;
        display: block;
        background-color: #EEE;
    }
    #left {
        left: 0;
        top: 0;
        position: absolute;
        width: 50%;
        height: 100%;
        display: block;
    }
    .description, .marked {
        white-space: pre-wrap;
    }
    iframe {
        width: 800px;
        height: 1000px;
    }
    *:not(.MJX-TEX *) {
        font-family: "Noto Sans KR", "Roboto", "Ubuntu", "Helvetica Neue", Helvetica, Arial, sans-serif;
        color: #333;
    }
    *, p, ul, ol, li {
        margin: 0;
        margin-block: 0;
    }
    p {
        line-height: 30px;
    }
    table {
        border-collapse: collapse;
        width: 100%;
    }
    th, td {
        border: 1px #888 solid;
        padding: 0 20px;
        height: 60px;
    }
    .container {
        margin: 100px auto;
        width: 850px;
    }
    h1, h2, h3, h4, h5, h6 {
        border-bottom: 1px #ccc solid;
        margin-bottom: 15px;
    }
    p:not(.code p), img, table {
        margin-bottom: 15px;
    }
    li {
        margin: 7.5px 0;
    }
    code, .code, code *, .code * {
        font-family: 'Menlo', 'Consolas', 'Monospace', Arial, sans-serif !important;
    }
    code, .code {
        border: 1px #aaa solid;
        padding: 5px 10px;
        background-color: #eee;
        word-break: break-all;
    }
    code {
        display: inline-block;
        line-height: normal;
        white-space: pre-wrap;
    }
    .code {
        display: block;
        margin: 5px 0;
    }
    .example {
        width: 100%;
        display: inline-block;
    }
    .input {
        width: calc(50% - 4px);
        margin-right: 4px;
        float: left;
    }
    .output {
        width: calc(50% - 4px);
        margin-left: 4px;
        float: left;
    }
    .submission {
        width: calc(100% - 50px);
        height: 500px;
        resize: none;
    }
    .cross {
        margin-left: 5px;
        font-size: 15px;
        color: red;
    }
    td {
        transition-duration: .5s;
        position: relative;
    }
    .progressBar {
        transition-duration: .5s;
        display: block;
        width: 0;
        height: 100%;
        position: absolute;
        top: 0;
        left: 0;
        overflow: hidden;
        white-space: nowrap;
    }
    .progressYellow {
        background-color: #eeee55 !important;
        background: linear-gradient(to right, var(--color1) 0, var(--color2) 100%) !important;
        transition: --color1 .5s, --color2 .5s, all .5s;
    }
    .progressGreen {
        background-color: #70ff6a !important;
    }
    .progressRed {
        background-color: #ff7070 !important;
        --color1: #ff7070;
        --color2: #ff7070;
        background: linear-gradient(to right, var(--color1) 0, var(--color2) 100%) !important;
        transition: --color1 .5s, --color2 .5s, all .5s;
    }
    .progressDone {
        background-color: #70ff6a !important;
        --color2: #70ff6a;
        background: linear-gradient(to right, var(--color1) 0, var(--color2) 100%) !important;
        transition: --color1 .5s, --color2 .5s, all .5s;
    }
    @property --color1 {
        syntax: '<color>';
        initial-value: #eeee55;
        inherits: false;
    }
    @property --color2 {
        syntax: '<color>';
        initial-value: #eeee55;
        inherits: false;
    }

    td:has(.progressBar) {
        border: none;
    }
    table {
        border: 1px #888 solid;
    }
    .onProgressBar {
        color: white;
        position: relative;
    }
    .onProgressBar * {
        color: white;
    }
    .inProgressBar {
        color: black;
        margin: 0 20px;
        line-height: 60px;
    }
    .inProgressBar * {
        color: black;
    }
    .fileLabel {
        background-color: #4F91FE;
        padding: 5px 20px;
        margin: 10px 0;
        color: white;
        width: calc(100% - 40px);
        display: block;
    }
    button:active, input:active, button:focus, input:focus, textarea:active, textarea:focus, select:active, select:focus {
        border: 1.5px solid #4F91FE;
        border-width: 3px;
        margin: 3px;
    }
    button, input, textarea, select {
        text-decoration: none;
        background-color: #FCFCFC;
        -webkit-transition-duration: 0.4s;
        transition-duration: 0.4s;
        padding: 12px 20px;
        font-size: 15px;
        margin: 5px;
        border: 1px solid #CCC;
        position: relative;
        cursor: pointer;
    }

    button {
        overflow: hidden;
    }
    button:focus, button:active {
        background-color: #E0E0E0;
    }
    .ripple {
        width: 100px;
        height: 100px;
        border-radius: 50%;
        background-color: #000;
        transform: scale(2.5);
        opacity: 0.32;
        position: absolute;
        animation: ripple 0.4s linear;
        pointer-events: none !important;
    }

    @keyframes ripple {
        0% {
            transform: scale(0);
            opacity: 0.32;
        }
        100% {
            transform: scale(2.5);
            opacity: 0;
        }
    }

    .ok {
        background-color: rgb(66, 133, 244);
        color: white;
    }

    .ok:focus, .ok:active {
        background-color: rgb(26, 83, 144);
    }
    form {
        display: inline-block;
    }
</style>

<script>
    $(function () {
        $('button').mousedown(createRipple);
        $('textarea').keyup(grow);
      setInterval(function () {
        var curr = new Date().getTime();
        while (ripples.length > 0 && ripples[0].time + 1000 < curr) {
          // ripples[0].remove();
          ripples.shift();
        }
      }, 100);
    });

    var ripples = [];

    function offset(el, sc) {
        var rect = el.getBoundingClientRect();
        return { top: rect.top, left: rect.left }
    }

    function createRipple(e) {
        console.log(this);
      this.appendChild(actualRipple(e, this, true));
    }

    function actualRipple(e, th, sc) {
      var circle = document.createElement('div');

      var radius = Math.max(th.clientWidth, th.clientHeight);
      circle.style.width = circle.style.height = radius + 'px';
      var off = offset(th, sc);
      circle.style.left = e.clientX - off.left - radius / 2 + 'px';
      circle.style.top = e.clientY - off.top - radius / 2 + 'px';
      console.log(e.clientX);
      circle.style.opacity = 0;
      circle.time = new Date().getTime();
      ripples.push(circle);
      circle.classList.add('ripple');
      return circle;
    }

    function grow(e) {
        autoGrow(this, e);
    }

    function autoGrow(th, e) {
        if (Math.max(th.scrollHeight - 500, 500) + 'px' == th.style.height) return;
        console.log(th.style.height);
        console.log(Math.max(th.scrollHeight - 500, 500) + 'px');
        th.style.height = Math.max(th.scrollHeight - 500, 500) + 'px';
        setTimeout(function () {
            autoGrow(th, e);
        }, 100);
    }

    function includes(arr, entity) {
      for (var i = 0; i < arr.length; i++) if (arr[i] == entity) return true;
      return false;
    }
</script>